import React, { useState } from 'react';
import { useTelegramWebApp } from '../useTelegram';

type TelegramFeaturesTabProps = {
  isAuthenticated: boolean;
};

const TelegramFeaturesTab: React.FC<TelegramFeaturesTabProps> = ({ isAuthenticated }) => {
  const [popupResult, setPopupResult] = useState<string>('');
  const [modalResult, setModalResult] = useState<string>('');
  
  const { 
    webApp, 
    isAvailable, 
    showAlert, 
    showConfirm, 
    showPopup, 
    hapticFeedback 
  } = useTelegramWebApp();

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ –∞–ª–µ—Ä—Ç–∞
  const handleShowAlert = () => {
    hapticFeedback.impactOccurred('light');
    showAlert('–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –∞–ª–µ—Ä—Ç –æ—Ç Telegram Mini App! üöÄ');
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  const handleShowConfirm = () => {
    hapticFeedback.impactOccurred('medium');
    showConfirm(
      '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ?',
      (confirmed: boolean) => {
        if (confirmed) {
          hapticFeedback.notificationOccurred('success');
          showAlert('–î–µ–π—Å—Ç–≤–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ! ‚úÖ');
        } else {
          hapticFeedback.notificationOccurred('warning');
          showAlert('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ! ‚ùå');
        }
      }
    );
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–ø–∞–ø–∞
  const handleShowPopup = () => {
    hapticFeedback.impactOccurred('light');
    showPopup(
      {
        title: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–ø–∞–ø',
        message: '–≠—Ç–æ –ø–æ–ø–∞–ø —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ—Ç Telegram Mini App! üì±',
        buttons: [
          {
            id: 'ok',
            type: 'default',
            text: 'OK'
          },
          {
            id: 'cancel',
            type: 'default',
            text: '–û—Ç–º–µ–Ω–∞'
          }
        ]
      },
              (buttonId: string | undefined) => {
          hapticFeedback.selectionChanged();
          setPopupResult(`–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: ${buttonId || 'unknown'}`);
          showAlert(`–í—ã –Ω–∞–∂–∞–ª–∏: ${buttonId || 'unknown'}`);
        }
    );
  };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ (—á–µ—Ä–µ–∑ showPopup)
  const handleShowModal = () => {
    hapticFeedback.impactOccurred('light');
    showPopup(
      {
        title: '–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ',
        message: '–≠—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç Telegram Mini App! ü™ü',
        buttons: [
          {
            id: 'primary',
            type: 'default',
            text: '–û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞'
          },
          {
            id: 'secondary',
            type: 'default',
            text: '–í—Ç–æ—Ä–∏—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞'
          },
          {
            id: 'close',
            type: 'default',
            text: '–ó–∞–∫—Ä—ã—Ç—å'
          }
        ]
      },
      (buttonId: string | undefined) => {
        hapticFeedback.selectionChanged();
        setModalResult(`–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: ${buttonId || 'unknown'}`);
        showAlert(`–í –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –Ω–∞–∂–∞—Ç–∞: ${buttonId || 'unknown'}`);
      }
    );
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–ø–∞–ø–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –∫–Ω–æ–ø–æ–∫
  const handleShowAdvancedPopup = () => {
    hapticFeedback.impactOccurred('light');
    showPopup(
      {
        title: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–ø–∞–ø',
        message: '–≠—Ç–æ—Ç –ø–æ–ø–∞–ø –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –∫–Ω–æ–ø–æ–∫ Telegram Mini App! üéØ',
        buttons: [
          {
            id: 'primary',
            type: 'default',
            text: '–û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞'
          },
          {
            id: 'destructive',
            type: 'destructive',
            text: '–û–ø–∞—Å–Ω–∞—è –∫–Ω–æ–ø–∫–∞'
          },
          {
            id: 'request',
            type: 'default',
            text: '–ó–∞–ø—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç'
          },
          {
            id: 'cancel',
            type: 'default',
            text: '–û—Ç–º–µ–Ω–∞'
          }
        ]
      },
              (buttonId: string | undefined) => {
          hapticFeedback.selectionChanged();
          setPopupResult(`–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–ø–∞–ø: ${buttonId || 'unknown'}`);
          showAlert(`–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: ${buttonId || 'unknown'}`);
        }
    );
  };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å HTML –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º (—á–µ—Ä–µ–∑ showPopup)
  const handleShowHTMLModal = () => {
    hapticFeedback.impactOccurred('light');
    showPopup(
      {
        title: 'HTML –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ',
        message: `
          <div style="text-align: center; padding: 20px;">
            <h3 style="color: #3b82f6; margin-bottom: 15px;">üé® –°—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç</h3>
            <p style="color: #6b7280; line-height: 1.6;">
              –≠—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç <strong>HTML —Ä–∞–∑–º–µ—Ç–∫—É</strong> –∏ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å 
              <em>—Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç</em> –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞.
            </p>
            <div style="margin: 20px 0; padding: 15px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 10px; color: white;">
              üöÄ Telegram Mini App –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–æ—â–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤!
            </p>
          </div>
        `,
        buttons: [
          {
            id: 'awesome',
            type: 'default',
            text: '–ü–æ—Ç—Ä—è—Å–∞—é—â–µ! üéâ'
          },
          {
            id: 'close',
            type: 'default',
            text: '–ó–∞–∫—Ä—ã—Ç—å'
          }
        ]
      },
      (buttonId: string | undefined) => {
        hapticFeedback.selectionChanged();
        setModalResult(`HTML –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ: ${buttonId || 'unknown'}`);
        showAlert(`HTML –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ: ${buttonId || 'unknown'}`);
      }
    );
  };

  // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è haptic feedback
  const handleHapticDemo = () => {
    hapticFeedback.impactOccurred('light');
    setTimeout(() => hapticFeedback.impactOccurred('medium'), 200);
    setTimeout(() => hapticFeedback.impactOccurred('heavy'), 400);
    setTimeout(() => hapticFeedback.notificationOccurred('success'), 600);
  };

  if (!isAuthenticated) {
    return (
      <div className="text-center py-12">
        <div className="text-6xl mb-6">üîí</div>
        <h2 className="text-2xl font-bold text-gray-800 mb-4">
          –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        </h2>
        <p className="text-gray-600 mb-8">
          –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º Telegram Mini App –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
        </p>
        <div className="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-2xl font-semibold">
          <span className="mr-2">üîê</span>
          –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-8">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center">
        <div className="text-6xl mb-4">üöÄ</div>
        <h1 className="text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-2">
          Telegram Mini App –§—É–Ω–∫—Ü–∏–∏
        </h1>
        <p className="text-gray-600 text-lg">
          –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Telegram WebApp API
        </p>
      </div>

      {/* –°—Ç–∞—Ç—É—Å API */}
      <div className={`p-4 rounded-2xl backdrop-blur-sm border ${
        isAvailable 
          ? 'bg-green-50/80 border-green-200/30' 
          : 'bg-red-50/80 border-red-200/30'
      }`}>
        <div className="flex items-center space-x-3">
          <div className={`w-3 h-3 rounded-full ${
            isAvailable ? 'bg-green-500' : 'bg-red-500'
          }`}></div>
          <span className={`font-medium ${
            isAvailable ? 'text-green-700' : 'text-red-700'
          }`}>
            {isAvailable 
              ? 'Telegram WebApp API –¥–æ—Å—Ç—É–ø–µ–Ω' 
              : 'Telegram WebApp API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'
            }
          </span>
        </div>
        {webApp && (
          <div className="mt-3 text-sm text-gray-600">
            <div>–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞: {webApp.colorScheme}</div>
            <div>–í—ã—Å–æ—Ç–∞ viewport: {webApp.viewportHeight}px</div>
            <div>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {webApp.initDataUnsafe?.user?.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</div>
          </div>
        )}
      </div>

      {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* Show Alert */}
        <div className="bg-gradient-to-br from-blue-50/80 to-indigo-50/80 backdrop-blur-sm rounded-2xl p-6 border border-blue-200/30">
          <div className="text-3xl mb-4">üì¢</div>
          <h3 className="text-xl font-bold text-gray-800 mb-3">Show Alert</h3>
          <p className="text-gray-600 mb-4 text-sm">
            –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
          </p>
          <button
            onClick={handleShowAlert}
            className="w-full bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-semibold py-3 px-4 rounded-xl hover:shadow-lg hover:scale-105 active:scale-95 transition-all duration-200"
          >
            –ü–æ–∫–∞–∑–∞—Ç—å –∞–ª–µ—Ä—Ç
          </button>
        </div>

        {/* Show Confirm */}
        <div className="bg-gradient-to-br from-green-50/80 to-emerald-50/80 backdrop-blur-sm rounded-2xl p-6 border border-green-200/30">
          <div className="text-3xl mb-4">‚ùì</div>
          <h3 className="text-xl font-bold text-gray-800 mb-3">Show Confirm</h3>
          <p className="text-gray-600 mb-4 text-sm">
            –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –î–∞/–ù–µ—Ç
          </p>
          <button
            onClick={handleShowConfirm}
            className="w-full bg-gradient-to-r from-green-500 to-emerald-600 text-white font-semibold py-3 px-4 rounded-xl hover:shadow-lg hover:scale-105 active:scale-95 transition-all duration-200"
          >
            –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
          </button>
        </div>

        {/* Show Popup */}
        <div className="bg-gradient-to-br from-purple-50/80 to-pink-50/80 backdrop-blur-sm rounded-2xl p-6 border border-purple-200/30">
          <div className="text-3xl mb-4">ü™ü</div>
          <h3 className="text-xl font-bold text-gray-800 mb-3">Show Popup</h3>
          <p className="text-gray-600 mb-4 text-sm">
            –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
          </p>
          <button
            onClick={handleShowPopup}
            className="w-full bg-gradient-to-r from-purple-500 to-pink-600 text-white font-semibold py-3 px-4 rounded-xl hover:shadow-lg hover:scale-105 active:scale-95 transition-all duration-200"
          >
            –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ø–∞–ø
          </button>
        </div>

        {/* Show Modal (—á–µ—Ä–µ–∑ showPopup) */}
        <div className="bg-gradient-to-br from-orange-50/80 to-red-50/80 backdrop-blur-sm rounded-2xl p-6 border border-orange-200/30">
          <div className="text-3xl mb-4">ü™ü</div>
          <h3 className="text-xl font-bold text-gray-800 mb-3">Show Modal (Popup)</h3>
          <p className="text-gray-600 mb-4 text-sm">
            –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —á–µ—Ä–µ–∑ showPopup (HTML –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
          </p>
          <button
            onClick={handleShowModal}
            className="w-full bg-gradient-to-r from-orange-500 to-red-600 text-white font-semibold py-3 px-4 rounded-xl hover:shadow-lg hover:scale-105 active:scale-95 transition-all duration-200"
          >
            –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
          </button>
        </div>
      </div>

      {/* –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* Advanced Popup */}
        <div className="bg-gradient-to-br from-indigo-50/80 to-blue-50/80 backdrop-blur-sm rounded-2xl p-6 border border-indigo-200/30">
          <div className="text-3xl mb-4">üéØ</div>
          <h3 className="text-xl font-bold text-gray-800 mb-3">–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π Popup</h3>
          <p className="text-gray-600 mb-4 text-sm">
            –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –∫–Ω–æ–ø–æ–∫: default, destructive, request_contact
          </p>
          <button
            onClick={handleShowAdvancedPopup}
            className="w-full bg-gradient-to-r from-indigo-500 to-blue-600 text-white font-semibold py-3 px-4 rounded-xl hover:shadow-lg hover:scale-105 active:scale-95 transition-all duration-200"
          >
            –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–ø–∞–ø
          </button>
        </div>

        {/* HTML Modal (—á–µ—Ä–µ–∑ showPopup) */}
        <div className="bg-gradient-to-br from-teal-50/80 to-cyan-50/80 backdrop-blur-sm rounded-2xl p-6 border border-teal-200/30">
          <div className="text-3xl mb-4">üé®</div>
          <h3 className="text-xl font-bold text-gray-800 mb-3">HTML –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ (Popup)</h3>
          <p className="text-gray-600 mb-4 text-sm">
            –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å HTML —Ä–∞–∑–º–µ—Ç–∫–æ–π —á–µ—Ä–µ–∑ showPopup
          </p>
          <button
            onClick={handleShowHTMLModal}
            className="w-full bg-gradient-to-r from-teal-500 to-cyan-600 text-white font-semibold py-3 px-4 rounded-xl hover:shadow-lg hover:scale-105 active:scale-95 transition-all duration-200"
          >
            –ü–æ–∫–∞–∑–∞—Ç—å HTML –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
          </button>
        </div>
      </div>

      {/* Haptic Feedback Demo */}
      <div className="bg-gradient-to-br from-yellow-50/80 to-amber-50/80 backdrop-blur-sm rounded-2xl p-6 border border-yellow-200/30">
        <div className="text-3xl mb-4">üì≥</div>
        <h3 className="text-xl font-bold text-gray-800 mb-3">Haptic Feedback</h3>
        <p className="text-gray-600 mb-4 text-sm">
          –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–∞–∫—Ç–∏–ª—å–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
        </p>
        <button
          onClick={handleHapticDemo}
          className="w-full bg-gradient-to-r from-yellow-500 to-amber-600 text-white font-semibold py-3 px-4 rounded-xl hover:shadow-lg hover:scale-105 active:scale-95 transition-all duration-200"
        >
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å haptic feedback
        </button>
      </div>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
      {(popupResult || modalResult) && (
        <div className="bg-gradient-to-br from-gray-50/80 to-slate-50/80 backdrop-blur-sm rounded-2xl p-6 border border-gray-200/30">
          <h3 className="text-xl font-bold text-gray-800 mb-4">üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</h3>
          <div className="space-y-3">
            {popupResult && (
              <div className="flex items-center space-x-3 p-3 bg-blue-50/50 rounded-xl border border-blue-200/30">
                <span className="text-blue-500">üì±</span>
                <span className="text-sm text-gray-700">{popupResult}</span>
              </div>
            )}
            {modalResult && (
              <div className="flex items-center space-x-3 p-3 bg-green-50/50 rounded-xl border border-green-200/30">
                <span className="text-green-500">ü™ü</span>
                <span className="text-sm text-gray-700">{modalResult}</span>
              </div>
            )}
          </div>
          <button
            onClick={() => {
              setPopupResult('');
              setModalResult('');
            }}
            className="mt-4 px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors duration-200"
          >
            –û—á–∏—Å—Ç–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
          </button>
        </div>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ—É–Ω–∫—Ü–∏—è—Ö */}
      <div className="bg-gradient-to-br from-slate-50/80 to-gray-50/80 backdrop-blur-sm rounded-2xl p-6 border border-slate-200/30">
        <h3 className="text-xl font-bold text-gray-800 mb-4">‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ—É–Ω–∫—Ü–∏—è—Ö</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600">
          <div>
            <h4 className="font-semibold text-gray-700 mb-2">üì± showAlert</h4>
            <p>–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –Ω–∞–∂–∞—Ç—å OK –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è.</p>
          </div>
          <div>
            <h4 className="font-semibold text-gray-700 mb-2">‚ùì showConfirm</h4>
            <p>–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –î–∞/–ù–µ—Ç. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç boolean —Ä–µ–∑—É–ª—å—Ç–∞—Ç.</p>
          </div>
          <div>
            <h4 className="font-semibold text-gray-700 mb-2">ü™ü showPopup</h4>
            <p>–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –∫–Ω–æ–ø–æ–∫.</p>
          </div>

          <div>
            <h4 className="font-semibold text-gray-700 mb-2">üì≥ Haptic Feedback</h4>
            <p>–¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (–≤–∏–±—Ä–∞—Ü–∏—è, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è).</p>
          </div>
          <div>
            <h4 className="font-semibold text-gray-700 mb-2">üé® Fallback</h4>
            <p>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π fallback –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Telegram API.</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default TelegramFeaturesTab;
